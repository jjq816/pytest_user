[2023-03-15 23:19:50,837][read_data.py 35][INFO]: 加载 C:\Users\酱酱\PycharmProjects\pytestDemo\pytest_user\config\setting.ini 文件......
[2023-03-15 23:19:50,884][read_data.py 35][INFO]: 加载 C:\Users\酱酱\PycharmProjects\pytestDemo\pytest_user\config\setting.ini 文件......
[2023-03-15 23:29:50,431][read_data.py 35][INFO]: 加载 C:\Users\酱酱\PycharmProjects\pytestDemo\pytest_user\config\setting.ini 文件......
[2023-03-15 23:29:50,555][read_data.py 35][INFO]: 加载 C:\Users\酱酱\PycharmProjects\pytestDemo\pytest_user\config\setting.ini 文件......
[2023-03-15 23:29:50,560][read_data.py 21][INFO]: 加载 C:\Users\酱酱\PycharmProjects\pytestDemo\pytest_user\data\base_data.yml 文件......
[2023-03-15 23:29:50,566][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'wintest', 'password': '123456'}, 'init_sql': {'insert_delete_user': ["INSERT INTO user(username, password, role, sex, telephone, address) VALUES('测试test', '123456', '1', '1', '13488888888', '北京市海淀区')", "DELETE FROM user WHERE username = '测试test'"], 'delete_register_user': "DELETE FROM user WHERE username = '测试test'", 'update_user_telephone': "UPDATE user SET telephone = '13500010004' WHERE id = 4"}} 
[2023-03-15 23:29:50,566][read_data.py 21][INFO]: 加载 C:\Users\酱酱\PycharmProjects\pytestDemo\pytest_user\data\api_test_data.yml 文件......
[2023-03-15 23:29:50,587][read_data.py 24][INFO]: 读到数据 ==>>  {'test_get_all_user_info': [[True, 0, '查询成功']], 'test_get_get_one_user_info': [['wintest4', True, 0, '查询成功'], ['wintest1111', False, '1004', '查不到相关用户']], 'test_register_user': [['测试test', '123456', '13599999999', '1', '深圳市宝安区', True, 0, '注册成功'], ['测试test', '123456', '13599999999', '3', '深圳市宝安区', False, 2003, '输入的性别只能是 0(男) 或 1(女)'], ['wintest4', '123456', '13599999999', '1', '深圳市宝安区', False, 2002, '用户名已存在']], 'test_login_user': [['wintest', '123456', True, 0, '登录成功'], ['测试test', '123456', False, 1003, '用户名不存在']], 'test_update_user': [[4, '123456', '13500010014', '1', '深圳市宝安区', True, 0, '修改用户信息成功'], [4, '123456', '1350001001', '1', '深圳市宝安区', False, 4008, '手机号格式不正确'], [111, '123456', '13500010014', '1', '深圳市宝安区', False, 4005, '用户ID不存在']], 'test_delete_user': [['测试test', True, 0, '删除用户信息成功'], ['wintest3', False, 3006, '该用户不允许删除']]} 
[2023-03-15 23:29:50,587][read_data.py 21][INFO]: 加载 C:\Users\酱酱\PycharmProjects\pytestDemo\pytest_user\data\scenario_test_data.yml 文件......
[2023-03-15 23:29:50,611][read_data.py 24][INFO]: 读到数据 ==>>  {'test_user_register_login_list': {'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区', 'except_result': True, 'except_code': 0, 'except_msg': '查询成功'}, 'test_user_repeat_register': {'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区', 'except_result': False, 'except_code': 2002, 'except_msg': '用户名已存在，注册失败'}, 'test_user_register_login_update_success': {'register': {'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区'}, 'login': {'admin_user': 'wintest', 'admin_pwd': '123456'}, 'update': {'new_password': '123456', 'new_telephone': '13599999998', 'new_sex': '1', 'new_address': '深圳市坪山区'}, 'except_result': True, 'except_code': 0, 'except_msg': '修改用户信息成功'}, 'test_user_register_login_update_fail': {'register': {'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区'}, 'login': {'admin_user': 'wintest', 'admin_pwd': '123456'}, 'update': {'new_password': '123456', 'new_telephone': '13599999998', 'new_sex': '1', 'new_address': '深圳市坪山区'}, 'except_result': False, 'except_code': 4005, 'except_msg': '修改的用户ID不存在'}, 'test_user_register_login_delete_success': {'admin_user': 'wintest', 'admin_pwd': '123456', 'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区', 'except_result': True, 'except_code': 0, 'except_msg': '删除用户信息成功'}, 'test_user_register_login_delete_fail': {'admin_user': 'wintest4', 'admin_pwd': '123456', 'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区', 'except_result': False, 'except_code': 3004, 'except_msg': '当前用户不是管理员用户'}} 
[2023-03-15 23:29:52,385][test_01_get_user_info.py 32][INFO]: *************** 开始执行用例 ***************
[2023-03-15 23:29:52,386][test_01_get_user_info.py 10][INFO]: 步骤1 ==>> 获取所有用户信息
[2023-03-15 23:29:52,386][rest_client.py 51][INFO]: 接口请求地址 ==>> http://127.0.0.1:9999/users
[2023-03-15 23:29:52,387][rest_client.py 52][INFO]: 接口请求方式 ==>> GET
[2023-03-15 23:29:52,387][rest_client.py 54][INFO]: 接口请求头 ==>> null
[2023-03-15 23:29:52,387][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2023-03-15 23:29:52,388][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2023-03-15 23:29:52,389][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2023-03-15 23:29:52,389][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2023-03-15 23:29:52,389][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2023-03-15 23:29:52,529][test_01_get_user_info.py 38][INFO]: code ==>> 期望结果：0， 实际结果：0
[2023-03-15 23:29:52,530][test_01_get_user_info.py 41][INFO]: *************** 结束执行用例 ***************
[2023-03-15 23:29:52,544][test_01_get_user_info.py 52][INFO]: *************** 开始执行用例 ***************
[2023-03-15 23:29:52,546][test_01_get_user_info.py 15][INFO]: 步骤1 ==>> 获取某个用户信息：wintest4
[2023-03-15 23:29:52,547][rest_client.py 51][INFO]: 接口请求地址 ==>> http://127.0.0.1:9999/users/wintest4
[2023-03-15 23:29:52,547][rest_client.py 52][INFO]: 接口请求方式 ==>> GET
[2023-03-15 23:29:52,548][rest_client.py 54][INFO]: 接口请求头 ==>> null
[2023-03-15 23:29:52,548][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2023-03-15 23:29:52,549][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2023-03-15 23:29:52,549][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2023-03-15 23:29:52,550][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2023-03-15 23:29:52,550][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2023-03-15 23:29:52,592][user.py 38][INFO]: 查看单个用户 ==>> 返回结果 ==>> {
  "code": "1004", 
  "msg": "查不到相关用户的信息"
}

[2023-03-15 23:29:52,887][test_01_get_user_info.py 52][INFO]: *************** 开始执行用例 ***************
[2023-03-15 23:29:52,888][test_01_get_user_info.py 15][INFO]: 步骤1 ==>> 获取某个用户信息：wintest1111
[2023-03-15 23:29:52,888][rest_client.py 51][INFO]: 接口请求地址 ==>> http://127.0.0.1:9999/users/wintest1111
[2023-03-15 23:29:52,888][rest_client.py 52][INFO]: 接口请求方式 ==>> GET
[2023-03-15 23:29:52,889][rest_client.py 54][INFO]: 接口请求头 ==>> null
[2023-03-15 23:29:52,889][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2023-03-15 23:29:52,889][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2023-03-15 23:29:52,890][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2023-03-15 23:29:52,890][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2023-03-15 23:29:52,891][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2023-03-15 23:29:52,905][user.py 38][INFO]: 查看单个用户 ==>> 返回结果 ==>> {
  "code": "1004", 
  "msg": "查不到相关用户的信息"
}

[2023-03-15 23:29:52,905][test_01_get_user_info.py 58][INFO]: code ==>> 期望结果：1004， 实际结果：【 1004 】
[2023-03-15 23:29:52,906][test_01_get_user_info.py 61][INFO]: *************** 结束执行用例 ***************
[2023-03-15 23:29:52,999][conftest.py 29][INFO]: ******************************
[2023-03-15 23:29:52,999][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2023-03-15 23:29:53,000][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2023-03-15 23:29:53,000][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2023-03-15 23:29:53,002][test_02_register.py 30][INFO]: *************** 开始执行用例 ***************
[2023-03-15 23:29:53,003][rest_client.py 51][INFO]: 接口请求地址 ==>> http://127.0.0.1:9999/register
[2023-03-15 23:29:53,003][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2023-03-15 23:29:53,003][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2023-03-15 23:29:53,004][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2023-03-15 23:29:53,004][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2023-03-15 23:29:53,004][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2023-03-15 23:29:53,004][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2023-03-15 23:29:53,004][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2023-03-15 23:29:53,172][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 0, 
  "msg": "恭喜，注册成功！"
}

[2023-03-15 23:29:53,173][test_02_register.py 10][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2023-03-15 23:29:53,174][test_02_register.py 36][INFO]: code ==>> 期望结果：0， 实际结果：【 0 】
[2023-03-15 23:29:53,175][test_02_register.py 39][INFO]: *************** 结束执行用例 ***************
[2023-03-15 23:29:53,265][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2023-03-15 23:29:53,266][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2023-03-15 23:29:53,266][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2023-03-15 23:29:53,277][conftest.py 29][INFO]: ******************************
[2023-03-15 23:29:53,277][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2023-03-15 23:29:53,278][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2023-03-15 23:29:53,279][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2023-03-15 23:29:53,283][test_02_register.py 30][INFO]: *************** 开始执行用例 ***************
[2023-03-15 23:29:53,284][rest_client.py 51][INFO]: 接口请求地址 ==>> http://127.0.0.1:9999/register
[2023-03-15 23:29:53,284][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2023-03-15 23:29:53,285][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2023-03-15 23:29:53,285][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2023-03-15 23:29:53,285][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2023-03-15 23:29:53,286][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "3",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2023-03-15 23:29:53,286][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2023-03-15 23:29:53,286][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2023-03-15 23:29:53,313][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2003, 
  "msg": "输入的性别只能是 0(男) 或 1(女)！！！"
}

[2023-03-15 23:29:53,314][test_02_register.py 10][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 3, 深圳市宝安区
[2023-03-15 23:29:53,314][test_02_register.py 36][INFO]: code ==>> 期望结果：2003， 实际结果：【 2003 】
[2023-03-15 23:29:53,315][test_02_register.py 39][INFO]: *************** 结束执行用例 ***************
[2023-03-15 23:29:53,349][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2023-03-15 23:29:53,350][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2023-03-15 23:29:53,350][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2023-03-15 23:29:53,363][conftest.py 29][INFO]: ******************************
[2023-03-15 23:29:53,363][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2023-03-15 23:29:53,364][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2023-03-15 23:29:53,364][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2023-03-15 23:29:53,368][test_02_register.py 30][INFO]: *************** 开始执行用例 ***************
[2023-03-15 23:29:53,368][rest_client.py 51][INFO]: 接口请求地址 ==>> http://127.0.0.1:9999/register
[2023-03-15 23:29:53,369][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2023-03-15 23:29:53,369][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2023-03-15 23:29:53,369][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2023-03-15 23:29:53,369][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2023-03-15 23:29:53,370][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "wintest4",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2023-03-15 23:29:53,370][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2023-03-15 23:29:53,370][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2023-03-15 23:29:53,413][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 0, 
  "msg": "恭喜，注册成功！"
}

[2023-03-15 23:29:53,413][test_02_register.py 10][INFO]: 步骤1 ==>> 注册用户 ==>> wintest4, 123456, 13599999999, 1, 深圳市宝安区
[2023-03-15 23:29:53,437][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2023-03-15 23:29:53,438][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2023-03-15 23:29:53,438][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2023-03-15 23:29:53,451][test_03_login.py 27][INFO]: *************** 开始执行用例 ***************
[2023-03-15 23:29:53,451][rest_client.py 51][INFO]: 接口请求地址 ==>> http://127.0.0.1:9999/login
[2023-03-15 23:29:53,452][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2023-03-15 23:29:53,452][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/x-www-form-urlencoded"
}
[2023-03-15 23:29:53,452][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2023-03-15 23:29:53,452][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> {
    "username": "wintest",
    "password": "123456"
}
[2023-03-15 23:29:53,453][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2023-03-15 23:29:53,453][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2023-03-15 23:29:53,453][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2023-03-15 23:29:53,465][user.py 99][INFO]: 登录用户 ==>> 返回结果 ==>> {
  "code": 1003, 
  "msg": "用户名不存在！！！"
}

[2023-03-15 23:29:53,465][test_03_login.py 10][INFO]: 步骤1 ==>> 登录用户：wintest
[2023-03-15 23:29:53,491][test_03_login.py 27][INFO]: *************** 开始执行用例 ***************
[2023-03-15 23:29:53,492][rest_client.py 51][INFO]: 接口请求地址 ==>> http://127.0.0.1:9999/login
[2023-03-15 23:29:53,492][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2023-03-15 23:29:53,493][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/x-www-form-urlencoded"
}
[2023-03-15 23:29:53,493][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2023-03-15 23:29:53,493][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> {
    "username": "测试test",
    "password": "123456"
}
[2023-03-15 23:29:53,494][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2023-03-15 23:29:53,494][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2023-03-15 23:29:53,495][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2023-03-15 23:29:53,503][user.py 99][INFO]: 登录用户 ==>> 返回结果 ==>> {
  "code": 1003, 
  "msg": "用户名不存在！！！"
}

[2023-03-15 23:29:53,503][test_03_login.py 10][INFO]: 步骤1 ==>> 登录用户：测试test
[2023-03-15 23:29:53,503][test_03_login.py 33][INFO]: code ==>> 期望结果：1003， 实际结果：【 1003 】
[2023-03-15 23:29:53,504][test_03_login.py 36][INFO]: *************** 结束执行用例 ***************
[2023-03-15 23:29:53,519][rest_client.py 51][INFO]: 接口请求地址 ==>> http://127.0.0.1:9999/login
[2023-03-15 23:29:53,520][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2023-03-15 23:29:53,520][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/x-www-form-urlencoded"
}
[2023-03-15 23:29:53,521][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2023-03-15 23:29:53,521][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> {
    "username": "wintest",
    "password": "123456"
}
[2023-03-15 23:29:53,521][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2023-03-15 23:29:53,521][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2023-03-15 23:29:53,522][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2023-03-15 23:29:53,533][conftest.py 40][INFO]: 前置步骤 ==>> 管理员 wintest 登录，返回信息 为：123456
[2023-03-15 23:29:53,547][conftest.py 29][INFO]: ******************************
[2023-03-15 23:29:53,547][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2023-03-15 23:29:53,547][conftest.py 97][INFO]: 修改用户操作：手工修改用户的手机号，以便用例重复执行
[2023-03-15 23:29:53,548][conftest.py 98][INFO]: 执行SQL：UPDATE user SET telephone = '13500010004' WHERE id = 4
[2023-03-15 23:29:53,553][test_04_update_user.py 37][INFO]: *************** 开始执行用例 ***************
[2023-03-15 23:29:53,586][conftest.py 29][INFO]: ******************************
[2023-03-15 23:29:53,586][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2023-03-15 23:29:53,587][conftest.py 97][INFO]: 修改用户操作：手工修改用户的手机号，以便用例重复执行
[2023-03-15 23:29:53,587][conftest.py 98][INFO]: 执行SQL：UPDATE user SET telephone = '13500010004' WHERE id = 4
[2023-03-15 23:29:53,591][test_04_update_user.py 37][INFO]: *************** 开始执行用例 ***************
[2023-03-15 23:29:53,624][conftest.py 29][INFO]: ******************************
[2023-03-15 23:29:53,625][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2023-03-15 23:29:53,625][conftest.py 97][INFO]: 修改用户操作：手工修改用户的手机号，以便用例重复执行
[2023-03-15 23:29:53,626][conftest.py 98][INFO]: 执行SQL：UPDATE user SET telephone = '13500010004' WHERE id = 4
[2023-03-15 23:29:53,633][test_04_update_user.py 37][INFO]: *************** 开始执行用例 ***************
[2023-03-15 23:29:53,709][conftest.py 29][INFO]: ******************************
[2023-03-15 23:29:53,710][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2023-03-15 23:29:53,710][conftest.py 65][INFO]: 删除用户操作：插入新用户--准备用于删除用户
[2023-03-15 23:29:53,710][conftest.py 66][INFO]: 执行前置SQL：INSERT INTO user(username, password, role, sex, telephone, address) VALUES('测试test', '123456', '1', '1', '13488888888', '北京市海淀区')
[2023-03-15 23:29:53,715][test_05_delete_user.py 34][INFO]: *************** 开始执行用例 ***************
[2023-03-15 23:29:53,753][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2023-03-15 23:29:53,754][conftest.py 72][INFO]: 删除用户操作：手工清理处理失败的数据
[2023-03-15 23:29:53,754][conftest.py 73][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2023-03-15 23:29:53,787][conftest.py 29][INFO]: ******************************
[2023-03-15 23:29:53,788][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2023-03-15 23:29:53,788][conftest.py 65][INFO]: 删除用户操作：插入新用户--准备用于删除用户
[2023-03-15 23:29:53,788][conftest.py 66][INFO]: 执行前置SQL：INSERT INTO user(username, password, role, sex, telephone, address) VALUES('测试test', '123456', '1', '1', '13488888888', '北京市海淀区')
[2023-03-15 23:29:53,791][test_05_delete_user.py 34][INFO]: *************** 开始执行用例 ***************
[2023-03-15 23:29:53,845][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2023-03-15 23:29:53,845][conftest.py 72][INFO]: 删除用户操作：手工清理处理失败的数据
[2023-03-15 23:29:53,846][conftest.py 73][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2023-03-15 23:29:53,874][conftest.py 29][INFO]: ******************************
[2023-03-15 23:29:53,874][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2023-03-15 23:29:53,875][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2023-03-15 23:29:53,875][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2023-03-15 23:29:53,876][test_01_register_login_list.py 43][INFO]: *************** 开始执行用例 ***************
[2023-03-15 23:29:53,877][rest_client.py 51][INFO]: 接口请求地址 ==>> http://127.0.0.1:9999/register
[2023-03-15 23:29:53,877][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2023-03-15 23:29:53,877][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2023-03-15 23:29:53,877][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2023-03-15 23:29:53,877][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2023-03-15 23:29:53,878][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2023-03-15 23:29:53,878][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2023-03-15 23:29:53,879][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2023-03-15 23:29:53,889][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2023-03-15 23:29:53,890][test_01_register_login_list.py 9][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2023-03-15 23:29:53,905][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2023-03-15 23:29:53,906][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2023-03-15 23:29:53,906][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2023-03-15 23:29:53,925][conftest.py 29][INFO]: ******************************
[2023-03-15 23:29:53,926][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2023-03-15 23:29:53,926][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2023-03-15 23:29:53,927][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2023-03-15 23:29:53,931][test_02_register_login_update.py 54][INFO]: *************** 开始执行用例 ***************
[2023-03-15 23:29:53,931][rest_client.py 51][INFO]: 接口请求地址 ==>> http://127.0.0.1:9999/register
[2023-03-15 23:29:53,932][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2023-03-15 23:29:53,932][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2023-03-15 23:29:53,933][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2023-03-15 23:29:53,933][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2023-03-15 23:29:53,933][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2023-03-15 23:29:53,934][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2023-03-15 23:29:53,934][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2023-03-15 23:29:53,946][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2023-03-15 23:29:53,947][test_02_register_login_update.py 9][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2023-03-15 23:29:53,963][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2023-03-15 23:29:53,964][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2023-03-15 23:29:53,964][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2023-03-15 23:29:53,973][conftest.py 29][INFO]: ******************************
[2023-03-15 23:29:53,974][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2023-03-15 23:29:53,974][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2023-03-15 23:29:53,974][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2023-03-15 23:29:53,976][test_02_register_login_update.py 96][INFO]: *************** 开始执行用例 ***************
[2023-03-15 23:29:53,977][rest_client.py 51][INFO]: 接口请求地址 ==>> http://127.0.0.1:9999/register
[2023-03-15 23:29:53,977][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2023-03-15 23:29:53,978][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2023-03-15 23:29:53,979][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2023-03-15 23:29:53,980][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2023-03-15 23:29:53,980][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2023-03-15 23:29:53,980][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2023-03-15 23:29:53,981][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2023-03-15 23:29:53,990][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2023-03-15 23:29:53,991][test_02_register_login_update.py 9][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2023-03-15 23:29:54,011][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2023-03-15 23:29:54,012][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2023-03-15 23:29:54,012][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2023-03-15 23:29:54,034][test_03_register_login_delete.py 44][INFO]: *************** 开始执行用例 ***************
[2023-03-15 23:29:54,035][rest_client.py 51][INFO]: 接口请求地址 ==>> http://127.0.0.1:9999/register
[2023-03-15 23:29:54,035][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2023-03-15 23:29:54,035][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2023-03-15 23:29:54,036][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2023-03-15 23:29:54,036][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2023-03-15 23:29:54,036][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2023-03-15 23:29:54,037][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2023-03-15 23:29:54,037][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2023-03-15 23:29:54,048][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2023-03-15 23:29:54,049][test_03_register_login_delete.py 9][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2023-03-15 23:29:54,075][conftest.py 29][INFO]: ******************************
[2023-03-15 23:29:54,076][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2023-03-15 23:29:54,077][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2023-03-15 23:29:54,077][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2023-03-15 23:29:54,080][test_03_register_login_delete.py 84][INFO]: *************** 开始执行用例 ***************
[2023-03-15 23:29:54,080][rest_client.py 51][INFO]: 接口请求地址 ==>> http://127.0.0.1:9999/register
[2023-03-15 23:29:54,081][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2023-03-15 23:29:54,081][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2023-03-15 23:29:54,081][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2023-03-15 23:29:54,082][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2023-03-15 23:29:54,082][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2023-03-15 23:29:54,082][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2023-03-15 23:29:54,082][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2023-03-15 23:29:54,093][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2023-03-15 23:29:54,093][test_03_register_login_delete.py 9][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2023-03-15 23:29:54,096][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2023-03-15 23:29:54,096][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2023-03-15 23:29:54,096][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2023-03-15 23:29:54,116][conftest.py 29][INFO]: ******************************
[2023-03-15 23:29:54,117][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2023-03-15 23:29:54,117][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2023-03-15 23:29:54,117][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2023-03-15 23:29:54,119][test_04_repeat_register.py 38][INFO]: *************** 开始执行用例 ***************
[2023-03-15 23:29:54,119][rest_client.py 51][INFO]: 接口请求地址 ==>> http://127.0.0.1:9999/register
[2023-03-15 23:29:54,119][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2023-03-15 23:29:54,119][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2023-03-15 23:29:54,119][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2023-03-15 23:29:54,120][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2023-03-15 23:29:54,120][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2023-03-15 23:29:54,120][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2023-03-15 23:29:54,120][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2023-03-15 23:29:54,127][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2023-03-15 23:29:54,127][test_04_repeat_register.py 9][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2023-03-15 23:29:54,142][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2023-03-15 23:29:54,143][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2023-03-15 23:29:54,143][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
